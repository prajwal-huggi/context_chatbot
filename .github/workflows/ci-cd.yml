name: CI/CD Pipeline

on:
  # Run on all pull requests targeting main
  pull_request:
    branches: ["main"]

  # Optional: also run on direct pushes (like merges)
  push:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
    # ---- Frontend (React + Vite) ----
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build
      - run: npm test --if-present
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist

  # ---- Backend (Go) ----
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - run: go mod tidy
      - run: go test ./... || echo "No tests found"
      - run: go build -o app ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: backend-app
          path: app

  # ---- GenAI Service (FastAPI + LangChain) ----
  ragSystem:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ragSystem
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirementsPython.txt
      - run: pytest || echo "No tests"
      - uses: actions/upload-artifact@v4
        with:
          name: ragSystem-app
          path: .

# ---- Deploy (optional: Docker + server) ----
#   deploy:
#     runs-on: ubuntu-latest
#     needs: [frontend, backend, ragSystem]
#     steps:
#       - uses: actions/checkout@v3
#       # Build Docker images
#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Build & Push Backend
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
#           docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
#       - name: Build & Push ragSystem
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/ragSystem:latest ./ragSystem
#           docker push ${{ secrets.DOCKER_USERNAME }}/ragSystem:latest
#       - name: Build & Push Frontend
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
#           docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
#       # Deploy (example: SSH to server and docker-compose up)
#       - name: Deploy over SSH
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           script: |
#             cd /your/app/location
#             docker-compose pull
#             docker-compose up -d
